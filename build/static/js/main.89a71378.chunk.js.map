{"version":3,"sources":["logo.svg","components/create-todo.component.js","components/edit-todo.component.js","components/todos-list.component.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","CreateTodo","props","state","todo_description","todo_responsible","todo_priority","todo_completed","onChangeTodoDescription","bind","onChangeTodoResponsible","onChangeTodoPriority","handleSubmit","e","this","setState","target","value","preventDefault","console","log","newTodo","axios","post","then","res","data","style","marginTop","onSubmit","className","type","onChange","name","id","checked","React","Component","EditTodo","onChangeTodoCompleted","get","match","params","catch","err","history","push","align","htmlFor","Todo","todo","to","_id","TodosList","todos","map","currentTodo","i","key","todoList","App","href","rel","src","logo","width","height","alt","path","exact","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.89a71378.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from \"react\";\nimport axios from 'axios';\n\nexport default class CreateTodo extends React.Component{\n    constructor(props){\n        super(props);\n        this.state ={\n            todo_description: \"\",\n            todo_responsible: \"\",\n            todo_priority: \"\",\n            todo_completed: false\n        }\n        this.onChangeTodoDescription = this.onChangeTodoDescription.bind(this);\n        this.onChangeTodoResponsible = this.onChangeTodoResponsible.bind(this);\n        this.onChangeTodoPriority = this.onChangeTodoPriority.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    onChangeTodoDescription(e){\n        this.setState({\n            todo_description: e.target.value\n        });\n    }\n\n    onChangeTodoResponsible(e){\n        this.setState({\n            todo_responsible: e.target.value\n        });\n    }\n\n    onChangeTodoPriority(e){\n        this.setState({\n            todo_priority: e.target.value\n        });\n    }\n\n    handleSubmit(e){\n        e.preventDefault();\n\n        console.log(\"Form submitted:\");\n        console.log(`Todo Description: ${this.state.todo_description}`);\n        console.log(`Todo Responsible: ${this.state.todo_responsible}`);\n        console.log(`Todo Priority: ${this.state.todo_priority}`);\n\n        const newTodo ={\n            todo_description: this.state.todo_description,\n            todo_responsible: this.state.todo_responsible,\n            todo_priority: this.state.todo_priority,\n            todo_completed: this.state.todo_completed\n        };\n\n        axios.post(\"/todos/add\", newTodo).then(res => console.log(res.data));\n\n        this.setState({\n            todo_description: \"\",\n            todo_responsible: '',\n            todo_priority: '',\n            todo_completed: false\n        });\n    }\n\n    render(){\n        return(\n            <div style={{marginTop: 10}}>\n                <h3>Create New Todo</h3>\n                <form onSubmit={this.handleSubmit}>\n                    <div className=\"form-group\">\n                        <label>Description: </label>\n                        <input \n                            type=\"text\" \n                            className=\"form-control\" \n                            value={this.state.todo_description} \n                            onChange={this.onChangeTodoDescription} \n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Responsible: </label>\n                        <input \n                            type=\"text\" \n                            className=\"form-control\" \n                            value={this.state.todo_responsible} \n                            onChange={this.onChangeTodoResponsible} \n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <div className=\"form-check form-check-inline\">\n                            <input \n                                className=\"form-check-input\" \n                                type=\"radio\" \n                                name=\"priorityOptions\" \n                                id=\"priorityLow\" \n                                value=\"Low\" \n                                checked={this.state.todo_priority === \"Low\"} \n                                onChange={this.onChangeTodoPriority} \n                            />\n                            <label className=\"form-check-label\">Low</label>\n                        </div>\n                        <div className=\"form-check form-check-inline\">\n                            <input \n                                className=\"form-check-input\" \n                                type=\"radio\" \n                                name=\"priorityOptions\" \n                                id=\"priorityMedium\" \n                                value=\"Medium\" \n                                checked={this.state.todo_priority === \"Medium\"} \n                                onChange={this.onChangeTodoPriority} \n                            />\n                            <label className=\"form-check-label\">Medium</label>\n                        </div>\n                        <div className=\"form-check form-check-inline\">\n                            <input \n                                className=\"form-check-input\" \n                                type=\"radio\" \n                                name=\"priorityOptions\" \n                                id=\"priorityHigh\" \n                                value=\"High\" \n                                checked={this.state.todo_priority === \"High\"} \n                                onChange={this.onChangeTodoPriority} \n                            />\n                            <label className=\"form-check-label\">High</label>\n                        </div>\n                    </div>\n                    <div className=\"form-group\">\n                        <input type=\"submit\" value=\"Create Todo\" className=\"btn btn-primary\" />\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}","import React from \"react\";\nimport axios from \"axios\";\n\nexport default class EditTodo extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            todo_description: '',\n            todo_responsible: '',\n            todo_priority: '',\n            todo_completed: false\n        }\n        this.onChangeTodoDescription = this.onChangeTodoDescription.bind(this);\n        this.onChangeTodoResponsible = this.onChangeTodoResponsible.bind(this);\n        this.onChangeTodoPriority = this.onChangeTodoPriority.bind(this);\n        this.onChangeTodoCompleted = this.onChangeTodoCompleted.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    componentDidMount(){\n        axios.get(\"/todos/\" + this.props.match.params.id).then((res)=>{\n            this.setState({\n                todo_description: res.data.todo_description,\n                todo_responsible: res.data.todo_responsible,\n                todo_priority: res.data.todo_priority,\n                todo_completed: res.data.todo_completed\n            })\n        }).catch((err)=>{\n            console.log(err);\n        })\n    }\n\n    onChangeTodoDescription(e){\n        this.setState({\n            todo_description: e.target.value\n        });\n    }\n\n    onChangeTodoResponsible(e){\n        this.setState({\n            todo_responsible: e.target.value\n        });\n    }\n\n    onChangeTodoPriority(e){\n        this.setState({\n            todo_priority: e.target.value\n        });\n    }\n\n    onChangeTodoCompleted(e) {\n        this.setState({\n            todo_completed: !this.state.todo_completed\n        });\n    }\n\n    handleSubmit(e){\n        e.preventDefault();\n\n        const newTodo ={\n            todo_description: this.state.todo_description,\n            todo_responsible: this.state.todo_responsible,\n            todo_priority: this.state.todo_priority,\n            todo_completed: this.state.todo_completed\n        };\n        console.log(newTodo);\n        axios.post(\"/todos/update/\" + this.props.match.params.id, newTodo).then((res) =>{\n                console.log(res.data);\n                this.props.history.push(\"/\"); \n            });\n\n        \n    }\n\n    render(){\n        return(\n            <div>\n                <h3 align=\"center\">Update Todo</h3>\n                <form onSubmit={this.handleSubmit}>\n                    <div className=\"form-group\">\n                        <label>Description: </label>\n                        <input \n                            type=\"text\" \n                            className=\"form-control\" \n                            value={this.state.todo_description} \n                            onChange={this.onChangeTodoDescription} \n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Responsible: </label>\n                        <input \n                            type=\"text\" \n                            className=\"form-control\" \n                            value={this.state.todo_responsible} \n                            onChange={this.onChangeTodoResponsible} \n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <div className=\"form-check form-check-inline\">\n                            <input \n                                className=\"form-check-input\" \n                                type=\"radio\" \n                                name=\"priorityOptions\" \n                                id=\"priorityLow\" \n                                value=\"Low\" \n                                checked={this.state.todo_priority === \"Low\"} \n                                onChange={this.onChangeTodoPriority} \n                            />\n                            <label className=\"form-check-label\">Low</label>\n                        </div>\n                        <div className=\"form-check form-check-inline\">\n                            <input \n                                className=\"form-check-input\" \n                                type=\"radio\" \n                                name=\"priorityOptions\" \n                                id=\"priorityMedium\" \n                                value=\"Medium\" \n                                checked={this.state.todo_priority === \"Medium\"} \n                                onChange={this.onChangeTodoPriority} \n                            />\n                            <label className=\"form-check-label\">Medium</label>\n                        </div>\n                        <div className=\"form-check form-check-inline\">\n                            <input \n                                className=\"form-check-input\" \n                                type=\"radio\" \n                                name=\"priorityOptions\" \n                                id=\"priorityHigh\" \n                                value=\"High\" \n                                checked={this.state.todo_priority === \"High\"} \n                                onChange={this.onChangeTodoPriority} \n                            />\n                            <label className=\"form-check-label\">High</label>\n                        </div>\n                    </div>\n                    <div className=\"form-check\">\n                        <input \n                            className=\"form-check-input\"\n                            id=\"completedCheckbox\"\n                            type=\"checkbox\"\n                            name=\"completedCheckbox\"\n                            onChange={this.onChangeTodoCompleted}\n                            checked={this.state.todo_completed}\n                            value={this.state.todo_completed}\n                        />\n                        <label className=\"form-check-label\" htmlFor=\"completedCheckbox\">\n                            Completed\n                        </label>\n                    </div>\n                    <br />\n                    <div className=\"form-group\">\n                        <input type=\"submit\" value=\"Update Todo\" className=\"btn btn-primary\" />\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport axios from \"axios\";\n\nconst Todo = (props) =>{\n    return(\n        <tr className={props.className}>\n            <td>{props.todo.todo_description}</td>\n            <td>{props.todo.todo_responsible}</td>\n            <td>{props.todo.todo_priority}</td>\n            <td>\n                <Link to={\"/edit/\" + props.todo._id}>Edit</Link>\n            </td>\n        </tr>\n    );\n}\n\nexport default class TodosList extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {todos: []};\n    }\n\n    componentDidMount(){\n        axios.get(\"/todos/\").then(res =>{\n            this.setState({\n                todos: res.data\n            });\n        }).catch(err=>{\n            console.log(err);\n        })\n    }\n\n    todoList(){\n        return this.state.todos.map((currentTodo, i) =>{\n            return <Todo todo={currentTodo} key={i} className={currentTodo.todo_completed ? \"completed\" : \"\"} />;\n        })\n    }\n\n    render(){\n        return(\n            <div>\n                <h3>Todos List</h3>\n                <table className=\"table table-striped\" style={{marginTop: 20}}>\n                    <thead>\n                        <tr>\n                            <th>Description</th>\n                            <th>Responsible</th>\n                            <th>Priority</th>\n                            <th>Action</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.todoList()}\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport {BrowserRouter as Router, Route, Link} from \"react-router-dom\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport CreateTodo from \"./components/create-todo.component\";\nimport EditTodo from \"./components/edit-todo.component\";\nimport TodosList from \"./components/todos-list.component\";\n\nimport logo from \"./logo.svg\";\n\nclass App extends React.Component{\n  render() {\n    return(\n      <Router>\n        <div className=\"container\">\n          <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n            <a className=\"navbar-brand\" href=\"https://codingthesmartway.com\" target=\"_blank\" rel=\"noopener noreferrer\">\n              <img src={logo} width=\"30\" height=\"30\" alt=\"CodingTheSmartWay.com\" />\n            </a>\n            <Link to=\"/\" className=\"navbar-brand\">MERN-Stack Todo App</Link>\n            <div className=\"collpase navbar-collapse\">\n              <ul className=\"navbar-nav mr-auto\">\n                <li className=\"nav-item\">\n                  <Link to=\"/\" className=\"nav-link\">Todos</Link>\n                </li>\n                <li className=\"nav-item\">\n                  <Link to=\"/create\" className=\"nav-link\">Create Todo</Link>\n                </li>\n              </ul>\n            </div>\n          </nav>\n          <br />\n          <Route path=\"/\" exact component={TodosList} />\n          <Route path=\"/edit/:id\" component={EditTodo} />\n          <Route path=\"/create\" component={CreateTodo} />  \n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}